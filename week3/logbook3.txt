QuickSums - 
Initial Thoughts:
This question looks very difficult but interesting because im not sure where to start, i have an obvious brute force solution 
so im going to attempt that, where i add a + in everypossible combination besides the start and end of course. Since the constraints
state that 10 would be the largest number, only 9 spot for combinations are possible making it 9! loops. Im thinking of using
recursion to break the number down and calling itself checking every time it recahes the target. Im going to try my best but
if i cant get it ill have to get some help.

Reflection:
This question took me an hours to really get the concept down but i finally got it with some verbal help from a friend because
i struggled in thinking of the logic behind the recursion. IM not very familiar with recursion and is probably my weakest point 
but i managed to get this quesiton done. I go the concept in the end but recursion to me is still quite a issue i face with. 
I just finished my first prac exam and both B questions could have been solved with recursion which i couldn't even fathom, this 
question and that exam has shown me how far behind i am so im going to keep giving it my best.


Arrows - 
Initial Thoughts:
This quesiton looks quite easy to accomplish, im thinking of using a loop to figure out all the arrows and then simply return 
longest one. The only hard part is distinguishing what is an arrow or not. IM thinking if its a < arrow simple determine if there
is a - or = next to it and continue the count until it isn't. Then i can use another for loop to go backwards and scan the > 
for the longest arrow. Then out of the two loops i can simply return the longest one.

Reflection:
This question was easily doable, only tricky part was figuring out the right arrows becasue i forgot to include the first character
skipping it everytime and i couldn't figure out why. Other than that pretty simple solutionusing a while loop within the for loop
to keep track of the length of the arrow just like i figured beforehand. This was the only easy quesiton though so i have to 
try harder for the next one.


StrangeComputer - 
Initial Thoughts:
This question is intriguing to me becuase its an interesting quesiton and i just finished a exam on bits. I think the answer is
pretty straightfoward where i examine the binary from left to right and flipping it accoardingly so since it starts with all 0
the first 1 i see increment the counter and then flip when it reaches a 0 and continue until the end of the string. Im not sure
how to implement the flip, im thinking a for loop using a boolean depending on whether its 0 or 1.

Reflection:
This quesition was quite simple but i still struggled because i forgot that i was given a string and i tried comparing the string
to a bool which obviously doesnt work. I just needed to compare it with a char and then change the char if it didnt equal and then 
increment the counter. This question was quite easy so im going to attempt a harder one for my last question.


SimpleCompressor - 
Initial Thoughts;
This question was very vrey similar to the 2B in the prac exam where numbers/words are compressed and the number before indicateds
how many times it needs to expand so i want to attempt this question cause i couldnt figure it out in the exam. I know i need to first
find the innermost bracket which can be found just using a loop to find ']' from left to right. I rememeber my friends said they 
solved it using recursion breaking down the brackets each time which i will attempt to do because my recursion needs improvement.

Reflection:
This question was surprisingly easy to understand but hard to implmenet recursion, I finally got it in the end after several attempt
and because i wasn't sure where i was going wrong. I didnt know how to handle the brackets but just realised i just had to 
increment the pointers at every step adn the recursion was just for the length of the numbers within the brackets. This question
gave me a lot more confindence in my ability but still need to work harder so i dont spend too much time like i did in the prac exam.


OVERALL REFLECTION:
These questions are clearly getting harder each week which is good as im forced to adapt and think more logically, i feel like
i know how to solve them but have trouble implementing them and waste time doing inefficient methods. I need to practice more 
quesitons each week to get better focusing on the more difficult problems. Arrows and SimpleCompressor were easy to understand and 
implement whilst simplecompressor and quicksum was very difficult for me. I can tell that im getting better as i train my brain each week.
