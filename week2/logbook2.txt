ChangingString -
Initial Thoughts:
At first i took me a lot of time to understand the question because im not very familiar with ascii but i get the concept of the 
question. I have to change K characters in A to be as close as it can to string B and then calculate the absolute value which
should be easy to do. The hard issue with this problem is figuring out which strings to change, my idea is to first calculate the 
biggest difference in inital string and change the biggest ones.

Reflection:
I could code the question well but i struggled with changing exactly K elements, i figured out how to change at most K elements 
so it struggled with questions such as "aa" "aa" where i wouldn't change anything and still returning 0 which is wrong. I finally
figured it out in the end by simply altering the minimal distance by 1 if it was a 0 so in the example shown the distance would 
be 2 if K was 2. Overall this question stumped me at first but i think next time i should use more comments because i just tried 
using them again and it helps my thinking process.

SquareOfDigits - 
Initial Thoughts:
The question is easy to understand but im having difficulty thinking of a solution, i want to try a brute force solution where i 
check every single square possible. Since its the largest square, i want to use nested loops to first check the sides, then check
the rows and columns. Im not very familiar with matrices in c++ so ill try my best, i remember doing them in matlab and i just
have to figure out how to compare the right indexes.

Reflection:
This question i used brute force to check every single square starting from the outside and moving in every time, i needed time
to correctly calculate the right indexes but i got it in the end. I believe this is the most optimal code as the constraints only
allow a 50x50 grid meaning this code would still be optimal for the max size. I cant think of a more optimal solution for bigger 
grids but overall i think i did pretty well considering i havn't touched nested loops in a long time.


EggCartons - 
Initial Thoughts:
This question looks simple but i believe its deceiving, from the example a clue i found was that if it is odd then its immediatly 
impossible as 6 and 8 are even numbers. Since it wants the minimal amount of egg cartons i want to try a brute force solution 
where i use 8 cartons as mamy times and possible until it exceeds the total amount and if it doesn't work, add one 6 and reduce 
by 8. This way it would check every possible outcome using the most minimal way as 8 is larger than 6. 

Reflection:
I used a non-conventional apprach with this question because i noticed a pattern with the carton, the correct way is the way i 
explained above but i couldn't find a way to implement it. because 8 is larger then 6, for every number above 12 that is even, each
number is possible so you just count the number of 8 until it reaches above n. Although u could change it for 6 it still returns
the same number. i manipulated this method while adding edge cases for numbers below 12, although it works i still feel like i 
cheated not following the proper method.


AlternateColors - 
Initial Thoughts:
At first i noticed that this question has high constraits so brute forcing the solution will not work, i want to attempt a solution
where i figure out the position of where k is by dividing it by 3. For example if they all had one and k was 3, simply 3/3 which is 
exactly one, making the last ball the choice. if it was 4 or 5, there would be remainder of .333 and .666, i want to use this to
my advantage to calculate the right ball. The only difficult part i forsee is when a color runs out, then it would be divided by 2, 
im not sure how to combat that but ill try my best.

Reflection:
This quesiton was the hardest one ive attempted yet, i needed help from tutors and friends at assist me becasue it was so difficult.
I could do the first park where if k was less than the minimum * 3 so no balls have run out but it gets diffult once it has run out.
Once a colour is depleted i had to do all possible scenarios of combinations and then repeat that when its one colour but ofcourse 
if one colour remains and k isn't 0, it outputs that colour. This question was very eye opening and its clear i need some more practice 
if i want to do well in the prac exams.


MooingCows - 
Initial Thoughts:
This question look deceiving at first because it requires some maths to calculate the disatisfation, I have an idea to first locate
each cow into a vector of pairs and then use a nested for loop to calculate the minimum disatisfation. I dont currently see an 
issue with this method as its quite straightfoward.

Reflection:
This question went smoothly as i was able to solve it using the same method as what i initially thought, i did run into a small
obstacle because im not very familiar with looping with pairs so i had to do some research. I think im slowing getting better with 
questions like these although i still take quite a bit of time to figure it out. This question was really useful in gauging my level
right now.


OVERALL REFLECTION -
Doing this pratical every week has definetly improved my mental ability to solve problems, these questions are more fun and challenging
rather then grueling. Each question here was more difficult than the first week questions besides eggcartons because i cheesed it.
I feel like im getting better everytime but i hate feeling stuck on quesitons that are out of my reach, i give up easily and always seek
help from friends for a logical solution. 